{"version":3,"sources":["components/loading.js","components/search-bar.js","components/verse-row.js","components/verse-table.js","app.js","sw-register.js","index.js"],"names":["Loading","className","SearchBar","props","bibles","books","chapters","i","length","push","value","book","name","aria-label","bible","onChange","onBibleChange","onBookChange","chapter","onChapterChange","VerseRow","index","verse","VerseTable","verses","map","key","App","useState","JSON","parse","localStorage","getItem","variables","setVariables","setBible","setBook","setChapter","setVerses","useEffect","fetch","process","then","resp","json","data","setItem","stringify","window","scrollTo","e","target","undefined","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","error","render","document","getElementById","URL","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.122b9550.chunk.js","sourcesContent":["const Loading = () => (\r\n  <div className=\"spinner\" />\r\n)\r\n\r\nexport default Loading\r\n","const SearchBar = props => {\r\n  const bibles = []\r\n  const books = []\r\n  const chapters = []\r\n\r\n  for(let i = 0; i < props.bibles.length; i++) {\r\n    bibles.push(\r\n      <option\r\n        value={i}\r\n        key={i}\r\n      >\r\n        {props.bibles[i]}\r\n      </option>\r\n    )\r\n  }\r\n\r\n  for(let i = 0; i < props.books.length; i++) {\r\n    books.push(\r\n      <option\r\n        value={i}\r\n        key={i}\r\n      >\r\n        {props.books[i]}\r\n      </option>\r\n    )\r\n  }\r\n\r\n  for(let i = 0; i < props.chapters[props.book]; i++) {\r\n    chapters.push(\r\n      <option\r\n        value={i}\r\n        key={i}\r\n      >\r\n        {i+1}\r\n      </option>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <select\r\n        name=\"bible\"\r\n        aria-label=\"Wybierz przekład\"\r\n        value={props.bible}\r\n        onChange={props.onBibleChange}\r\n      >\r\n        {bibles}\r\n      </select>\r\n      <select\r\n        name=\"book\"\r\n        aria-label=\"Wybierz księgę\"\r\n        value={props.book}\r\n        onChange={props.onBookChange}\r\n      >\r\n        {books}\r\n      </select>\r\n      <select\r\n        name=\"chapter\"\r\n        aria-label=\"Wybierz rozdział\"\r\n        value={props.chapter}\r\n        onChange={props.onChapterChange}\r\n      >\r\n        {chapters}\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n","const VerseRow = ({index, verse}) => (\r\n  <tr>\r\n    <td>{index}</td>\r\n    <td>{verse}</td>\r\n  </tr>\r\n)\r\n\r\nexport default VerseRow\r\n","import VerseRow from './verse-row'\r\n\r\nconst VerseTable = ({verses}) => (\r\n  <table>\r\n    <tbody>\r\n      {verses.map((verse, key) => (\r\n        <VerseRow\r\n          key={key}\r\n          index={key + 1}\r\n          verse={verse}\r\n        />\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n)\r\n\r\nexport default VerseTable\r\n","import { useState, useEffect } from 'react'\r\nimport Loading from './components/loading'\r\nimport SearchBar from './components/search-bar'\r\nimport VerseTable from './components/verse-table'\r\n\r\nconst App = () => {\r\n  const [variables, setVariables] = useState(JSON.parse(localStorage.getItem('variables')))\r\n  const [bible, setBible] = useState(localStorage.getItem('bible') || 0)\r\n  const [book, setBook] = useState(localStorage.getItem('book') || 0)\r\n  const [chapter, setChapter] = useState(localStorage.getItem('chapter') || 0)\r\n  const [verses, setVerses] = useState(JSON.parse(localStorage.getItem('verses')))\r\n\r\n  useEffect(() => {\r\n    fetch(process.env.REACT_APP_API_URL)\r\n    .then(resp => resp.json())\r\n    .then(data => setVariables(data))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/${bible}/${book}/${chapter}`)\r\n    .then(resp => resp.json())\r\n    .then(data => setVerses(data))\r\n  }, [bible, book, chapter])\r\n\r\n  useEffect(() => localStorage.setItem('variables', JSON.stringify(variables)), [variables])\r\n  useEffect(() => localStorage.setItem('bible', bible), [bible])\r\n  useEffect(() => localStorage.setItem('book', book), [book])\r\n  useEffect(() => localStorage.setItem('chapter', chapter), [chapter])\r\n  useEffect(() => localStorage.setItem('verses', JSON.stringify(verses)), [verses])\r\n\r\n  useEffect(() => window.scrollTo(0,0))\r\n\r\n  return (\r\n    <>\r\n      {variables ? <SearchBar\r\n        bibles={variables.bibles}\r\n        books={variables.books}\r\n        chapters={variables.chapters}\r\n        bible={bible}\r\n        book={book}\r\n        chapter={chapter}\r\n        onBibleChange={e => setBible(e.target.value)}\r\n        onBookChange={e => setBook(e.target.value) || setChapter(0)}\r\n        onChapterChange={e => setChapter(e.target.value)}\r\n      /> : undefined}\r\n      {verses ? <VerseTable verses={verses} /> : <Loading />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { StrictMode } from 'react'\r\nimport { render } from 'react-dom'\r\nimport App from './app'\r\nimport { register } from './sw-register'\r\nimport './index.css'\r\n\r\nrender(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>\r\n, document.getElementById('app'))\r\n\r\nregister()\r\n"],"sourceRoot":""}